openapi: "3.0.2"
info:
  version: "1.1"
  title: Inholland Bank API
  description: API for the Inholland banking application
  termsOfService: n/a
  contact:
    name: Group2
    url: https://www.github.com
    email: 638931@student.inholland.nl
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: https://api.server.test/v1
    description: Test server

  - url: https://api.server.real/v1
    description: Live Server

paths:
  /users:
    get:
      tags:
        - User
      summary: Get All users
      operationId: getAllUsers
      parameters:
        - $ref: "#/components/parameters/offsetParam"
        - $ref: "#/components/parameters/limitParam"
      responses:
        "200":
          description: users returned
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"

  /users/{id}:
    get:
      tags:
        - User
      summary: get a user by id
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: succesful
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"
  /user/register:
    post:
      tags:
        - User
      description: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"

      responses:
        "201":
          description: user created
        "400":
          description: invalid input, user invalid
        "409":
          description: an existing user already exists
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"

  /user/login/{username},{password}:
    post:
      tags:
        - User
      description: login
      parameters:
        - in: path
          name: username
          description: username
          required: true
          schema:
            type: string
            maxLength: 50
        - in: path
          name: password
          description: password
          required: true
          schema:
            type: string
            maxLength: 256
      responses:
        200:
          description: user logged in
        404:
          description: invalid input.
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "415":
          $ref:  "#/components/responses/unsupportedMediaType"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"

  /user/update/{userid}:
    put:
      tags:
        - User
      description: User(customer - employee) can update his info.
      operationId: updateUser
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: string
            maxLength: 50
      responses:
        202:
          description: information updated.
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"

  /Transactions:
    post:
      tags:
        - Transaction
      summary: Create a new Transaction
      description: Create a new Transaction
      operationId: transactionPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"

    get:
      tags:
        - Transaction
      summary: Return a list of Transactions
      description: Returns a list of Transactions for current user from most recent to oldest
      parameters:
        - $ref: "#/components/parameters/limitParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionList"
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"

    put:
      tags:
        - Transaction
      summary: Edit a transaction
      description: Edit a transaction
      operationId: editTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactionId:
                    type: number
                    format: uuid
                    example: 789012
                    description: The ID of the altered Transaction
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"

  /Transactions/Deposit:
    post:
      tags:
        - Transaction
      summary: Deposit money into an account
      description: Deposit money into an account
      operationId: depositPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Deposit"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactionId:
                    type: number
                    format: uuid
                    example: 123456
                    description: The ID of the created Transaction
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"

  /Transactions/Withdraw:
    post:
      tags:
        - Transaction
      summary: Withdraw money from an account
      description: Withdraw money from an account
      operationId: withdrawPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Withdrawal"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactionId:
                    type: number
                    format: uuid
                    example: 123456
                    description: The ID of the created Transaction
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"

  /Transactions/{id}:
    get:
      tags:
        - Transaction
      summary: Return a Transaction with the specified ID
      description: Get a specific transaction by its ID
      operationId: transactionIdGet
      parameters:
        - in: path
          name: id
          description: Transaction ID
          required: true
          schema:
            type: integer
            format: int32
            example: 124875
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
        - Transaction
      summary: Delete a scheduled transaction
      description: Delete a scheduled transaction by it's ID
      operationId: deleteTransactionById
      parameters:
        - in: path
          name: id
          description: Transaction ID
          required: true
          schema:
            type: integer
            format: int32
            example: 124875
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"

  /Transactions/ByAccountNumber:
    get:
      tags:
        - Transaction
      summary: Return a list of Transactions from IBAN
      description: Return a list of transactions from the account with the specified IBAN
      operationId: transactionByAccountNo
      parameters:
        - $ref: "#/components/parameters/ibanParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionList"
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"


  /Accounts/{id}:
    summary: Represents an account
    description: >
      This resource represents and individual account in the system.
      Each account is identified by a number id.
    get:
      tags:
        - AccountManagement
      summary: Gets an account by ID.
      operationId: getAccountById
      parameters:
        - in: path
          name: id
          description: Account ID
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        "200":
          description: An account object has been returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountAll"
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
        - AccountManagement
      summary: Deletes an account by ID
      operationId: deleteAccountById
      parameters:
        - in: path
          name: id
          description: Account ID
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        "200":
          description: The account object has been deleted
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"

    put:
      tags:
        - AccountManagement
      summary: Updates an existing account
      operationId: updateAccountById
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountAll"
      parameters:
        - in: path
          name: id
          description: Account ID
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        "200":
          description: An account object has been updated
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"

  /Accounts/{id}/{type}:
    summary: Represents an account type
    description: >
      This resource represents and individual account type in the system.
      Each account is identified by a number id.
    post:
      tags:
        - AccountType
      summary: Changes account type
      operationId: changeAccountType
      parameters:
        - in: path
          name: id
          description: Account ID
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - in: path
          name: type
          description: The new type
          required: true
          schema:
            type: string
            enum: [saving, current]
      responses:
        "200":
          description: The account type has been changed
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"

  /Accounts:
    summary: Represents an account object
    description: >
      This resource represents and individual account object in the system.
      Each account is identified by a number id.
    post:
      tags:
        - AccountManagement
      summary: Adds a new Account
      operationId: addANewAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        "201":
          description: New account has been created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"

    get:
      tags:
        - AccountManagement
      summary: Gets all accounts
      operationId: getAllAccounts
      parameters:
        - $ref: "#/components/parameters/offsetParam"
        - $ref: "#/components/parameters/limitParam"
      responses:
        "200":
          description: Paginated accounts have been returned
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"

  /Accounts/{id}/addBalance/{amount}:
    summary: Represents an account balance and the amount that needs to be added
    description: >
      This resource represents an amount and the amount that needs to be added to an account.
      Each account is identified by a number id.
    post:
      tags:
        - AccountBalance
      summary: Adds specified amount
      operationId: addBalance
      parameters:
        - in: path
          name: id
          description: Account ID
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - in: path
          name: amount
          description: Balance to be added
          required: true
          schema:
            type: number
            format: double
            minimum: 0
      responses:
        "200":
          description: The amount has been added to the account
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"

  /Accounts/{id}/subtractBalance/{amount}:
    summary: Represents an account balance and the amount that needs to be subtracted
    description: >
      This resource represents the amount that needs to be subtracted to added to an account.
      Each account is identified by a number id.
    post:
      tags:
        - AccountBalance
      summary: Subtracts specified amount
      operationId: subtractBalance
      parameters:
        - in: path
          name: id
          description: Account ID
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - in: path
          name: amount
          description: Balance to be subtracted
          required: true
          schema:
            type: number
            format: double
            minimum: 0
      responses:
        "200":
          description: The amount has been subtracted from the account
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"

  /Accounts/{id}/getBalance:
    summary: Represents an account balance
    description: >
      This resource represents an account's balance.
      Each account is identified by a number id.
    get:
      tags:
        - AccountBalance
      summary: Gets an account balance by ID.
      operationId: getAccountBalanceById
      parameters:
        - in: path
          name: id
          description: Account ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Balance of the account has been returned
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
        "429":
          $ref: "#/components/responses/tooManyRequests"
        default:
          $ref: "#/components/responses/default"

components:
  schemas:
    User:
      additionalProperties: false
      type: object
      required:
        - id
        - username
        - password
        - email
        - phoneNumber
        - accounts
      properties:
        id:
          type: string
          example: 12e0nBank
        username:
          type: string
          example: mads
        phoneNumber:
          type: string
          example: 321123527
        password:
          type: string
          example: GetMyP@ss1
          maxLength: 256
        email:
          type: string
          example: mads@gmail.com
        accounts:
          type: array
          items:
            $ref: "#/components/schemas/Account"
          maxItems: 100

    Transaction:
      type: object
      additionalProperties: false
      required:
        - accountTo
        - accountFrom
        - amount
        - performedBy
      properties:
        transactionId:
          type: number
          format: uuid
          example: 123456
          description: The ID of the created Transaction

        accountTo:
          type: string
          example: NL04INHO6818968668
          description: IBAN of the account receiving the money
          maxLength: 34

        accountFrom:
          type: string
          example: NL01INHO0000579848
          description: IBAN of the account sending the money
          maxLength: 34

        transactionDate:
          type: string
          example: 2021/12/01 16:02:06
          description: Timestamp of the transaction

        amount:
          type: number
          format: double
          example: 123.45
          description: The amonut of the transaction in EURO

        performedBy:
          type: integer
          format: int32
          example: 123
          description: ID of the user performing the transaction

    Deposit:
      type: object
      additionalProperties: false
      required:
        - accountTo
        - transactionDate
        - amount
        - performedBy
      properties:
        accountTo:
          type: string
          example: NL04INHO6818968668
          description: IBAN of the account receiving the money

        transactionDate:
          type: string
          example: 2021/12/01 16:02:06
          description: Timestamp of the transaction

        amount:
          type: number
          format: double
          example: 123.45
          description: The amonut of the transaction in EURO

        performedBy:
          type: integer
          format: int32
          example: 123
          description: ID of the user performing the transaction

    Withdrawal:
      additionalProperties: false
      type: object
      required:
        - accountFrom
        - transactionDate
        - amount
        - performedBy

      properties:
        accountFrom:
          type: string
          example: NL04INHO6818968668
          description: IBAN of the account withdrawing the money
          readOnly: false
          maxLength: 34

        transactionDate:
          type: string
          example: 2021/12/01 16:02:06
          description: Timestamp of the transaction

        amount:
          type: number
          format: double
          example: 123.45
          description: The amonut of the transaction in EURO

        performedBy:
          type: integer
          format: int32
          example: 123
          description: ID of the user performing the transaction

    TransactionList:
      additionalProperties: false
      type: array
      items:
        $ref: "#/components/schemas/Transaction"
      maxItems: 100
      example:
        - transactionId: 123456
          accountTo: NL04INHO6818968668
          accountFrom: NL01INHO0000579848
          transactionDate: 2021/12/01 16:02:06
          amount: 123.45
          performedBy: Dan

        - transactionId: 123500
          accountTo: NL04INHO6868186817
          accountFrom: NL01INHO0000579848
          transactionDate: 2021/12/01 16:02:06
          amount: 123.45
          performedBy: Dan

        - transactionId: 123525
          accountTo: NL09INHO6891486186
          accountFrom: NL01INHO0000579848
          transactionDate: 2021/12/01 16:02:06
          amount: 123.45
          performedBy: Alice

    Account:
      additionalProperties: false
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          description: The unique id of the account
          example: 3
        iban:
          type: string
          description: IBAN number of the account
          example: NL03INHO0033576852
          not:
            default: NL01INHO0000000001 # this address is reserved for the bank itself
          maxLength: 34
        accountType:
          type: string
          enum: [saving, current]
          default: current
          description: Type of the account, can be either saving or current
        balance:
          type: number
          format: double
          default: 0
          minimum: 0
      required:
        - id
        - iban
        - accountType
        - balance

    AccountAll:
      additionalProperties: false
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          description: The unique id of the account
          example: 3
        iban:
          type: string
          description: IBAN number of the account
          example: NL03INHO0033576852
          maxLength: 34
        accountType:
          type: string
          enum: [saving, current]
          default: current
          description: Type of the account, can be either saving or current
        balance:
          type: number
          format: double
          default: 0
          minimum: 0
      required:
        - id
        - iban
        - accountType
        - balance
    Error:
      additionalProperties: false
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 404
        error:
          type: string
          maxLength: 100
          example: Not Found
        description:
          type: string
          maxLength: 500
          example: The requested resource was not found on the server

  # Parameters are for paginated enddpoint
  parameters:
    limitParam:
      name: max
      in: query
      required: false
      description: The Maximum number of items to return
      schema:
        type: integer
        format: int32
        minimum: 10
        maximum: 50
        example: 15
        default: 10
    ibanParam:
      name: IBAN
      required: true
      in: query
      description: The account to perform action on
      schema:
        type: string
        example: NL01INHO0000579848
        maxLength: 34
    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
      description: The number of items to skip before starting to collect the result set.

    transactionIdParam:
      name: accountId
      in: path
      required: true
      schema:
        type: string
        format: UUID

  responses:
    #Generic Error Responses
    badRequest:
      description: Bad Reqeust
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    unauthorized:
      description: Credentials invalid or incorrect
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    forbidden:
      description: Forbidden from performing this operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    notFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    unsupportedMediaType:
      description: Invalid JSON format
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    tooManyRequests:
      description: Too many requests. Try again in 300 seconds
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    default:
      description: An unknown error has occured
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  # Implementing bearer authentication
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

# Applying the security globally to all operations
security:
  - bearerAuth: []
