openapi: "3.0.2"
info:
  version: "1.1"
  title: Inholland Bank API
  description: API for the Inholland banking application.
  termsOfService: n/a
  contact:
    name: Group2
    url: https://www.github.com
    email: 638931@student.inholland.nl
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: https://api.server.test/v1
    description: Test server

  - url: https://api.server.real/v1
    description: Live Server

paths:
  /users:
    get:
      tags:
        - User
      summary: Get all users registered on the system.
      description: Fetches the entire list of users stored on the system.
      operationId: getAllUsers
      parameters:
        - $ref: "#/components/parameters/offsetParam"
        - $ref: "#/components/parameters/limitParam"
      responses:
        "200":
          description: users returned
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: "#/components/responses/Default"

  /users/{id}:
    get:
      tags:
        - User
      summary: Get a user by their ID.
      description: Fetches a user from the system by the ID provided.
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: "#/components/responses/Default"

  /user/register:
    post:
      tags:
        - User
      summary: Registers a user.
      description: Register a user to the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"

      responses:
        "200":
          description: user created
        "201":
          description: The user has been created.
        "400":
          description: Invalid input, user invalid.
        "409":
          description: This user already exists.
        "401":
          description: invalid input, user invalid
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: an existing user already exists
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: "#/components/responses/Default"

  /user/login/{username},{password}:
    post:
      tags:
        - User
      description: login
      parameters:
        - in: path
          name: username
          description: username
          required: true
          schema:
            type: string
            maxLength: 50
        - in: path
          name: password
          description: password
          required: true
          schema:
            type: string
            maxLength: 256
      responses:
        200:
          description: User logged in.
        404:
          description: Invalid input.
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "415":
          $ref: "#/components/responses/UnsupportedMediaType"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: "#/components/responses/Default"

  /user/update/{userid}:
    put:
      tags:
        - User
      description: User(customer - employee) can update their information.
      operationId: updateUser
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: string
            maxLength: 50
      responses:
        202:
          description: Your information has been updated.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: "#/components/responses/Default"

  /user/delete/{userid}:
    put:
      tags:
      - User
      description: Change user accountStatus to Inactive.
      operationId: deleteUser
      parameters:
      - name: userid
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: account deleted.

  /Transaction:
    post:
      tags:
        - Transaction
      summary: Create a new Transaction.
      description: Create a new Transaction.
      operationId: createTransaction

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"

      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: "#/components/responses/Default"

    get:
      tags:
        - Transaction
      summary: Return a list of Transactions.
      description: Returns an ordered list of Transactions for current user from most recent to oldest.
      operationId: getTransactionsByUser

      parameters:
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/offsetParam"

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionList"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: "#/components/responses/Default"

  /Transactions/Deposit:
    post:
      tags:
        - Transaction
      summary: Deposit money into an account.
      description: Deposit money into an account.
      operationId: depositMoney

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Deposit"

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: "#/components/responses/Default"

  /Transactions/Withdraw:
    post:
      tags:
        - Transaction
      summary: Withdraw money from an account.
      description: Withdraw money from the given account.
      operationId: withdrawMoney

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Withdrawal"

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: "#/components/responses/Default"

  /Transactions/{id}:
    get:
      tags:
        - Transaction
      summary: Return a Transaction with the specified ID.
      description: Get a specific transaction by its ID.
      operationId: getTransactionById

      parameters:
        - $ref: "#/components/parameters/transactionIdParam"

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: "#/components/responses/Default"

    delete:
      tags:
        - Transaction
      summary: Delete a scheduled transaction
      description: >
        Delete a scheduled transaction by it's ID.

        You cannot delete a transaction that has already been processed.
      operationId: deleteTransactionById

      parameters:
        - $ref: "#/components/parameters/transactionIdParam"

      responses:
        "204":
          description: OK
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: "#/components/responses/Default"

    put:
      tags:
        - Transaction
      summary: Edit a transaction
      description: Edits the specified transaction, given the ID.
      operationId: editTransactionById

      parameters:
        - $ref: "#/components/parameters/transactionIdParam"

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"

        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: "#/components/responses/Default"

  /Transactions/ByAccountNumber:
    get:
      tags:
        - Transaction
      summary: Return a list of Transactions from IBAN.
      description: Return a list of transactions from the account with the specified IBAN.
      operationId: getTransactionByIBAN

      parameters:
        - $ref: "#/components/parameters/ibanParam"
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/offsetParam"

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionList"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: "#/components/responses/Default"

  /Accounts/{iban}:
    summary: Represents an account
    description: >
      This resource represents and individual account in the system.
      Each account is identified by an Iban number.
    get:
      tags:
        - AccountManagement
      summary: Gets an account by Iban.
      operationId: getAccountByIban
      parameters:
      - in: path
        name: iban
        description: Account Iban
        required: true
        schema:
          type: string
      responses:
        "200":
          description: An account object has been returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountAll"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: '#/components/schemas/Account'

    delete:
      tags:
        - AccountManagement
      summary: Deletes an account by Iban
      operationId: deleteAccountByIban
      parameters:
      - in: path
        name: iban
        description: Account Iban
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The account object has been deleted.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: "#/components/responses/Default"

    put:
      tags:
        - AccountManagement
      summary: Updates an existing account
      operationId: updateAccountByIban
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      parameters:
      - in: path
        name: iban
        description: Account Iban
        required: true
        schema:
          type: string
      responses:
        "200":
          description: An account object has been updated.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: "#/components/responses/Default"


  /Accounts/{iban}/{type}:
    summary: Represents an account type
    description: >
      This resource represents and individual account type in the system.
      Each account is identified by an Iban number.
    post:
      tags:
        - AccountType
      summary: Changes account type.
      operationId: changeAccountType
      parameters:
        - in: path
          name: iban
          description: Account Iban
          required: true
          schema:
            type: string
        - in: path
          name: type
          description: The new type for the account to be changed into.
          required: true
          schema:
            type: string
            enum: [saving, current]
      responses:
        "200":
          description: The account type has been changed.
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: "#/components/responses/Default"

  /Accounts:
    summary: Represents an account object
    description: >
      This resource represents and individual account object in the system.
      Each account is identified by a unique Iban number.
    post:
      tags:
        - AccountManagement
      summary: Adds a new Account
      operationId: addANewAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        "201":
          description: The new account has been created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: "#/components/responses/Default"

    get:
      tags:
        - AccountManagement
      summary: Gets all accounts
      operationId: getAllAccounts
      parameters:
        - $ref: "#/components/parameters/offsetParam"
        - $ref: "#/components/parameters/limitParam"
      responses:
        '200':
          description: Paginated accounts have been returned

  /Accounts/{iban}/getBalance:
    summary: Represents an account balance
    description: >
      This resource represents an account's balance.
      Each account is identified by an Iban number.
    get:
      tags:
        - AccountBalance
      summary: Gets an account balance by Iban.
      operationId: getAccountBalanceByIban
      parameters:
      - in: path
        name: iban
        description: Account Iban
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Balance of the account has been returned.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        default:
          $ref: "#/components/responses/Default"

components:
  schemas:
    User:
      additionalProperties: false
      type: object
      required:
      - id
      - username
      - password
      - email
      - phoneNumber
      - accounts
      - role
      - accountStatus
      properties:
        id:
          type: string
          example: 12e0nBank
        username:
          type: string
          example: mads
        phoneNumber:
          type: string
          example: 321123527
        password:
          type: string
          example: GetMyP@ss1
          maxLength: 256
        email:
          type: string
          example: mads@gmail.com
        accounts:
          type: array
          items:
            $ref: "#/components/schemas/Account"
          maxItems: 100
        role:
          type: string
          example: employee
        accountStatus:
          type: string
          example: "Active or Inactive"


    Transaction:
      type: object
      additionalProperties: false
      required:
        - accountTo
        - accountFrom
        - amount
        - performedBy
      properties:
        transactionId:
          type: string
          format: uuid
          description: The ID of the created Transaction.
          readOnly: true

        accountTo:
          type: string
          example: NL04INHO6818968668
          description: IBAN of the account receiving the money.
          maxLength: 34

        accountFrom:
          type: string
          example: NL01INHO0000579848
          description: IBAN of the account sending the money.
          maxLength: 34

        transactionDate:
          type: string
          format: date-time
          example: 2021/12/01 16:02:06
          description: Timestamp of the transaction.

        amount:
          type: number
          format: double
          example: 123.45
          minimum: 0
          description: The amonut of the transaction in EURO.

        performedBy:
          type: string
          format: uuid
          description: ID of the user performing the transaction.
          readOnly: true

    Deposit:
      type: object
      additionalProperties: false
      required:
        - accountTo
        - transactionDate
        - amount
        - performedBy
      properties:
        transactionId:
          type: string
          format: uuid
          description: The ID of the created Transaction.
          readOnly: true

        accountTo:
          type: string
          example: NL04INHO6818968668
          description: IBAN of the account receiving the money.

        transactionDate:
          type: string
          format: date-time
          example: 2021/12/01 16:02:06
          description: Timestamp of the transaction.

        amount:
          type: number
          format: double
          example: 123.45
          description: The amonut of the transaction in EURO.
          minimum: 0

        performedBy:
          type: string
          format: uuid
          description: ID of the user performing the transaction.
          readOnly: true

    Withdrawal:
      additionalProperties: false
      type: object
      required:
        - accountFrom
        - transactionDate
        - amount
        - performedBy

      properties:
        transactionId:
          type: string
          format: uuid
          description: The ID of the created Transaction.
          readOnly: true

        accountFrom:
          type: string
          example: NL04INHO6818968668
          description: IBAN of the account withdrawing the money.
          maxLength: 34

        transactionDate:
          type: string
          format: date-time
          example: 2021/12/01 16:02:06
          description: Timestamp of the transaction.

        amount:
          type: number
          format: double
          example: 123.45
          description: The amount of the transaction in EURO.

        performedBy:
          type: string
          format: uuid
          description: ID of the user performing the transaction. #might need to be changed to iban instead of id
          readOnly: true

    TransactionList:
      additionalProperties: false
      type: array
      items:
        $ref: "#/components/schemas/Transaction"
      maxItems: 100
      example:
        - transactionId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          accountTo: NL04INHO6818968668
          accountFrom: NL01INHO0000579848
          transactionDate: 2021/12/01 16:02:06
          amount: 123.45
          performedBy: 3fa85f64-5717-4562-b3fc-2c963f66afa6

        - transactionId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          accountTo: NL04INHO6868186817
          accountFrom: NL01INHO0000579848
          transactionDate: 2021/12/01 16:02:06
          amount: 123.45
          performedBy: 3fa85f64-5717-4562-b3fc-2c963f66afa6

        - transactionId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          accountTo: NL09INHO6891486186
          accountFrom: NL01INHO0000579848
          transactionDate: 2021/12/01 16:02:06
          amount: 123.45
          performedBy: 3fa85f64-5717-4562-b3fc-2c963f66afa6

    Account:
      additionalProperties: false
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          description: The unique ID of the account.
          example: 3
        iban:
          type: string
          description: IBAN number of the account.
          example: NL03INHO0033576852
          not:
            default: NL01INHO0000000001 # this address is reserved for the bank itself
          maxLength: 34
        accountType:
          type: string
          enum: [saving, current]
          default: current
          description: The type of the account. This can be either saving or current.
        balance:
          type: number
          format: double
          default: 0
          minimum: 0
      required:
        - id
        - iban
        - accountType
        - balance

    AccountAll:
      additionalProperties: false
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          description: The unique ID of the account.
          example: 3
        iban:
          type: string
          description: IBAN number of the account.
          example: NL03INHO0033576852
          maxLength: 34
        accountType:
          type: string
          enum: [saving, current]
          default: current
          description: The type of the account. This can be either saving or current.
        balance:
          type: number
          format: double
          default: 0
          minimum: 0
      required:
        - id
        - iban
        - accountType
        - balance

    Error:
      additionalProperties: false
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 404
          maximum: 600
          minimum: 400
        error:
          type: string
          maxLength: 100
          example: Not Found.
        description:
          type: string
          maxLength: 500
          example: The requested resource was not found on the server.

  # Parameters are for paginated enddpoint
  parameters:

    limitParam:
      name: max
      in: query
      required: false
      description: The maximum number of items to return.
      schema:
        type: integer
        format: int32
        minimum: 10
        maximum: 50
        example: 15
        default: 10

    ibanParam:
      name: IBAN
      required: true
      in: query
      description: The account to perform the action on.
      schema:
        type: string
        example: NL01INHO0000579848
        maxLength: 34

    offsetParam:
      in: query
      required: false
      name: offset
      description: The number of items to skip before starting to collect the result set.
      schema:
        type: integer
        format: int32
        example: 60
        minimum: 0

    transactionIdParam:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: UUID
        example: 4a090b27-5300-456a-8041-4c63a5e31436

  responses:
    #Generic Error Responses
    BadRequest:
      description: Bad Reqeust. Please try again.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Unauthorized:
      description: The entered credentials are invalid or incorrect. Please try again.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Forbidden:
      description: You do not have access to perform this action. Forbidden.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    NotFound:
      description: Not Found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    UnsupportedMediaType:
      description: This media type is unsupported or it is an invalid JSON format.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    TooManyRequests:
      description: You have sent too many requests. Please try again in at least 300 seconds.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Default:
      description: An unknown error has occured.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  # Implementing bearer authentication
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

# Applying the security globally to all operations
security:
  - bearerAuth: []
